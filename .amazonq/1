{
  "conversation_id": "78c239b2-ebcd-4d76-a966-00716e0b718c",
  "next_message": null,
  "history": [],
  "valid_history_range": [
    0,
    0
  ],
  "transcript": [
    "> /context show",
    "> /context ",
    "> /save .amazonq/1"
  ],
  "tools": {
    "native___": [
      {
        "ToolSpecification": {
          "name": "fs_read",
          "description": "Tool for reading files, directories and images. Always provide an 'operations' array.\n\nFor single operation: provide array with one element.\nFor batch operations: provide array with multiple elements.\n\nAvailable modes:\n- Line: Read lines from a file\n- Directory: List directory contents\n- Search: Search for patterns in files\n- Image: Read and process images\n\nExamples:\n1. Single: {\"operations\": [{\"mode\": \"Line\", \"path\": \"/file.txt\"}]}\n2. Batch: {\"operations\": [{\"mode\": \"Line\", \"path\": \"/file1.txt\"}, {\"mode\": \"Search\", \"path\": \"/file2.txt\", \"pattern\": \"test\"}]}",
          "input_schema": {
            "json": {
              "required": [
                "operations"
              ],
              "type": "object",
              "properties": {
                "operations": {
                  "description": "Array of operations to execute. Provide one element for single operation, multiple for batch.",
                  "items": {
                    "required": [
                      "mode"
                    ],
                    "type": "object",
                    "properties": {
                      "image_paths": {
                        "items": {
                          "type": "string"
                        },
                        "description": "List of paths to the images. This is currently supported by the Image mode.",
                        "type": "array"
                      },
                      "context_lines": {
                        "type": "integer",
                        "description": "Number of context lines around search results (optional, for Search mode)",
                        "default": 2
                      },
                      "mode": {
                        "description": "The operation mode to run in: `Line`, `Directory`, `Search`. `Line` and `Search` are only for text files, and `Directory` is only for directories. `Image` is for image files, in this mode `image_paths` is required.",
                        "enum": [
                          "Line",
                          "Directory",
                          "Search",
                          "Image"
                        ],
                        "type": "string"
                      },
                      "path": {
                        "type": "string",
                        "description": "Path to the file or directory. The path should be absolute, or otherwise start with ~ for the user's home (required for Line, Directory, Search modes)."
                      },
                      "start_line": {
                        "type": "integer",
                        "default": 1,
                        "description": "Starting line number (optional, for Line mode). A negative index represents a line number starting from the end of the file."
                      },
                      "end_line": {
                        "type": "integer",
                        "description": "Ending line number (optional, for Line mode). A negative index represents a line number starting from the end of the file.",
                        "default": -1
                      },
                      "depth": {
                        "default": 0,
                        "description": "Depth of a recursive directory listing (optional, for Directory mode)",
                        "type": "integer"
                      },
                      "pattern": {
                        "description": "Pattern to search for (required, for Search mode). Case insensitive. The pattern matching is performed per line.",
                        "type": "string"
                      }
                    }
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "summary": {
                  "type": "string",
                  "description": "Optional description of the purpose of this batch operation (mainly useful for multiple operations)"
                }
              }
            }
          }
        }
      },
      {
        "ToolSpecification": {
          "name": "use_aws",
          "description": "Make an AWS CLI api call with the specified service, operation, and parameters. All arguments MUST conform to the AWS CLI specification. Should the output of the invocation indicate a malformed command, invoke help to obtain the the correct command.",
          "input_schema": {
            "json": {
              "properties": {
                "operation_name": {
                  "type": "string",
                  "description": "The name of the operation to perform."
                },
                "profile_name": {
                  "type": "string",
                  "description": "Optional: AWS profile name to use from ~/.aws/credentials. Defaults to default profile if not specified."
                },
                "parameters": {
                  "type": "object",
                  "description": "The parameters for the operation. The parameter keys MUST conform to the AWS CLI specification. You should prefer to use JSON Syntax over shorthand syntax wherever possible. For parameters that are booleans, prioritize using flags with no value. Denote these flags with flag names as key and an empty string as their value. You should also prefer kebab case."
                },
                "region": {
                  "type": "string",
                  "description": "Region name for calling the operation on AWS."
                },
                "label": {
                  "description": "Human readable description of the api that is being called.",
                  "type": "string"
                },
                "service_name": {
                  "type": "string",
                  "description": "The name of the AWS service. If you want to query s3, you should use s3api if possible."
                }
              },
              "type": "object",
              "required": [
                "region",
                "service_name",
                "operation_name",
                "label"
              ]
            }
          }
        }
      },
      {
        "ToolSpecification": {
          "name": "execute_bash",
          "description": "Execute the specified bash command.",
          "input_schema": {
            "json": {
              "properties": {
                "summary": {
                  "type": "string",
                  "description": "A brief explanation of what the command does"
                },
                "command": {
                  "type": "string",
                  "description": "Bash command to execute"
                }
              },
              "required": [
                "command"
              ],
              "type": "object"
            }
          }
        }
      },
      {
        "ToolSpecification": {
          "name": "report_issue",
          "description": "Opens the browser to a pre-filled gh (GitHub) issue template to report chat issues, bugs, or feature requests. Pre-filled information includes the conversation transcript, chat context, and chat request IDs from the service.",
          "input_schema": {
            "json": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the GitHub issue."
                },
                "actual_behavior": {
                  "type": "string",
                  "description": "Optional: The actual chat behavior that happened and demonstrates the issue or lack of a feature."
                },
                "expected_behavior": {
                  "type": "string",
                  "description": "Optional: The expected chat behavior or action that did not happen."
                },
                "steps_to_reproduce": {
                  "type": "string",
                  "description": "Optional: Previous user chat requests or steps that were taken that may have resulted in the issue or error response."
                }
              },
              "required": [
                "title"
              ]
            }
          }
        }
      },
      {
        "ToolSpecification": {
          "name": "fs_write",
          "description": "A tool for creating and editing files\n * The `create` command will override the file at `path` if it already exists as a file, and otherwise create a new file\n * The `append` command will add content to the end of an existing file, automatically adding a newline if the file doesn't end with one. The file must exist.\n Notes for using the `str_replace` command:\n * The `old_str` parameter should match EXACTLY one or more consecutive lines from the original file. Be mindful of whitespaces!\n * If the `old_str` parameter is not unique in the file, the replacement will not be performed. Make sure to include enough context in `old_str` to make it unique\n * The `new_str` parameter should contain the edited lines that should replace the `old_str`.",
          "input_schema": {
            "json": {
              "properties": {
                "summary": {
                  "type": "string",
                  "description": "A brief explanation of what the file change does or why it's being made."
                },
                "file_text": {
                  "type": "string",
                  "description": "Required parameter of `create` command, with the content of the file to be created."
                },
                "insert_line": {
                  "description": "Required parameter of `insert` command. The `new_str` will be inserted AFTER the line `insert_line` of `path`.",
                  "type": "integer"
                },
                "old_str": {
                  "description": "Required parameter of `str_replace` command containing the string in `path` to replace.",
                  "type": "string"
                },
                "command": {
                  "enum": [
                    "create",
                    "str_replace",
                    "insert",
                    "append"
                  ],
                  "type": "string",
                  "description": "The commands to run. Allowed options are: `create`, `str_replace`, `insert`, `append`."
                },
                "new_str": {
                  "type": "string",
                  "description": "Required parameter of `str_replace` command containing the new string. Required parameter of `insert` command containing the string to insert. Required parameter of `append` command containing the content to append to the file."
                },
                "path": {
                  "type": "string",
                  "description": "Absolute path to file or directory, e.g. `/repo/file.py` or `/repo`."
                }
              },
              "required": [
                "command",
                "path"
              ],
              "type": "object"
            }
          }
        }
      },
      {
        "ToolSpecification": {
          "name": "introspect",
          "description": "ALWAYS use this tool when users ask ANY question about Q CLI itself, its capabilities, features, commands, or functionality. This includes questions like 'Can you...', 'Do you have...', 'How do I...', 'What can you do...', or any question about Q's abilities. When mentioning commands in your response, always prefix them with '/' (e.g., '/save', '/load', '/context'). CRITICAL: Only provide information explicitly documented in Q CLI documentation. If details about any tool, feature, or command are not documented, clearly state the information is not available rather than generating assumptions.",
          "input_schema": {
            "json": {
              "type": "object",
              "properties": {
                "query": {
                  "description": "The user's question about Q CLI usage, features, or capabilities",
                  "type": "string"
                }
              },
              "required": []
            }
          }
        }
      },
      {
        "ToolSpecification": {
          "name": "dummy",
          "description": "This is a dummy tool. If you are seeing this that means the tool associated with this tool call is not in the list of available tools. This could be because a wrong tool name was supplied or the list of tools has changed since the conversation has started. Do not show this when user asks you to list tools.",
          "input_schema": {
            "json": {
              "type": "object",
              "properties": {},
              "required": []
            }
          }
        }
      }
    ]
  },
  "context_manager": {
    "max_context_files_size": 150000,
    "current_profile": "q_cli_default",
    "paths": [
      "AmazonQ.md",
      "AGENTS.md",
      "README.md",
      ".amazonq/rules/**/*.md"
    ],
    "hooks": {}
  },
  "context_message_length": 921,
  "latest_summary": null,
  "model_info": {
    "model_name": "claude-sonnet-4",
    "model_id": "claude-sonnet-4",
    "context_window_tokens": 200000
  },
  "file_line_tracker": {},
  "mcp_enabled": true
}